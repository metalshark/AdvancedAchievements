/*
 * This file is generated by jOOQ.
 */
package com.hm.achievement.db.tables.records;

import com.hm.achievement.db.tables.Itembreaks;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItembreaksRecord extends UpdatableRecordImpl<ItembreaksRecord> implements Record2<String, Long> {

	private static final long serialVersionUID = -2101369630;

	/**
	 * Setter for <code>itembreaks.playername</code>.
	 */
	public void setPlayername(String value) {
		set(0, value);
	}

	/**
	 * Getter for <code>itembreaks.playername</code>.
	 */
	public String getPlayername() {
		return (String) get(0);
	}

	/**
	 * Setter for <code>itembreaks.itembreaks</code>.
	 */
	public void setItembreaks(Long value) {
		set(1, value);
	}

	/**
	 * Getter for <code>itembreaks.itembreaks</code>.
	 */
	public Long getItembreaks() {
		return (Long) get(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	@Override
	public Row2<String, Long> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	@Override
	public Row2<String, Long> valuesRow() {
		return (Row2) super.valuesRow();
	}

	@Override
	public Field<String> field1() {
		return Itembreaks.ITEMBREAKS.PLAYERNAME;
	}

	@Override
	public Field<Long> field2() {
		return Itembreaks.ITEMBREAKS.ITEMBREAKS_;
	}

	@Override
	public String component1() {
		return getPlayername();
	}

	@Override
	public Long component2() {
		return getItembreaks();
	}

	@Override
	public String value1() {
		return getPlayername();
	}

	@Override
	public Long value2() {
		return getItembreaks();
	}

	@Override
	public ItembreaksRecord value1(String value) {
		setPlayername(value);
		return this;
	}

	@Override
	public ItembreaksRecord value2(Long value) {
		setItembreaks(value);
		return this;
	}

	@Override
	public ItembreaksRecord values(String value1, Long value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ItembreaksRecord
	 */
	public ItembreaksRecord() {
		super(Itembreaks.ITEMBREAKS);
	}

	/**
	 * Create a detached, initialised ItembreaksRecord
	 */
	public ItembreaksRecord(String playername, Long itembreaks) {
		super(Itembreaks.ITEMBREAKS);

		set(0, playername);
		set(1, itembreaks);
	}
}
