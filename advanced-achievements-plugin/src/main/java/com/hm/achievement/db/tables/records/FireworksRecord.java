/*
 * This file is generated by jOOQ.
 */
package com.hm.achievement.db.tables.records;

import com.hm.achievement.db.tables.Fireworks;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FireworksRecord extends UpdatableRecordImpl<FireworksRecord> implements Record2<String, Long> {

	private static final long serialVersionUID = 378792394;

	/**
	 * Setter for <code>fireworks.playername</code>.
	 */
	public void setPlayername(String value) {
		set(0, value);
	}

	/**
	 * Getter for <code>fireworks.playername</code>.
	 */
	public String getPlayername() {
		return (String) get(0);
	}

	/**
	 * Setter for <code>fireworks.fireworks</code>.
	 */
	public void setFireworks(Long value) {
		set(1, value);
	}

	/**
	 * Getter for <code>fireworks.fireworks</code>.
	 */
	public Long getFireworks() {
		return (Long) get(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	@Override
	public Row2<String, Long> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	@Override
	public Row2<String, Long> valuesRow() {
		return (Row2) super.valuesRow();
	}

	@Override
	public Field<String> field1() {
		return Fireworks.FIREWORKS.PLAYERNAME;
	}

	@Override
	public Field<Long> field2() {
		return Fireworks.FIREWORKS.FIREWORKS_;
	}

	@Override
	public String component1() {
		return getPlayername();
	}

	@Override
	public Long component2() {
		return getFireworks();
	}

	@Override
	public String value1() {
		return getPlayername();
	}

	@Override
	public Long value2() {
		return getFireworks();
	}

	@Override
	public FireworksRecord value1(String value) {
		setPlayername(value);
		return this;
	}

	@Override
	public FireworksRecord value2(Long value) {
		setFireworks(value);
		return this;
	}

	@Override
	public FireworksRecord values(String value1, Long value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached FireworksRecord
	 */
	public FireworksRecord() {
		super(Fireworks.FIREWORKS);
	}

	/**
	 * Create a detached, initialised FireworksRecord
	 */
	public FireworksRecord(String playername, Long fireworks) {
		super(Fireworks.FIREWORKS);

		set(0, playername);
		set(1, fireworks);
	}
}
